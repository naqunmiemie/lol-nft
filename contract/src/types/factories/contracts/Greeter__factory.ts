/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GreeterError",
    type: "error",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061003c6040518060600160405280602281526020016107f06022913961006c60201b6102911760201c565b6040805180820190915260038082526231323360e81b6020909201918252610066916000916100d7565b506101ff565b6100b3816040516024016100809190610170565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526100b616565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546100e3906101c5565b90600052602060002090601f016020900481019282610105576000855561014b565b82601f1061011e57805160ff191683800117855561014b565b8280016001018555821561014b579182015b8281111561014b578251825591602001919060010190610130565b5061015792915061015b565b5090565b5b80821115610157576000815560010161015c565b600060208083528351808285015260005b8181101561019d57858101830151858201604001528201610181565b818111156101af576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806101d957607f821691505b6020821081036101f957634e487b7160e01b600052602260045260246000fd5b50919050565b6105e28061020e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f7643a814610051578063a41368621461005b578063cfae32171461006e578063ef690cc01461008c575b600080fd5b610059610094565b005b61005961006936600461041d565b6100ad565b610076610171565b604051610083919061051b565b60405180910390f35b610076610203565b60405163c8508fc360e01b815260040160405180910390fd5b61015a6040518060600160405280602381526020016105b360239139600080546100d690610535565b80601f016020809104026020016040519081016040528092919081815260200182805461010290610535565b801561014f5780601f106101245761010080835404028352916020019161014f565b820191906000526020600020905b81548152906001019060200180831161013257829003601f168201915b5050505050836102ec565b805161016d90600090602084019061036e565b5050565b60606000805461018090610535565b80601f01602080910402602001604051908101604052809291908181526020018280546101ac90610535565b80156101f95780601f106101ce576101008083540402835291602001916101f9565b820191906000526020600020905b8154815290600101906020018083116101dc57829003601f168201915b5050505050905090565b6000805461021090610535565b80601f016020809104026020016040519081016040528092919081815260200182805461023c90610535565b80156102895780601f1061025e57610100808354040283529160200191610289565b820191906000526020600020905b81548152906001019060200180831161026c57829003601f168201915b505050505081565b6102e9816040516024016102a5919061051b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b17905261034d565b50565b6103488383836040516024016103049392919061056f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632ced7cef60e01b17905261034d565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461037a90610535565b90600052602060002090601f01602090048101928261039c57600085556103e2565b82601f106103b557805160ff19168380011785556103e2565b828001600101855582156103e2579182015b828111156103e25782518255916020019190600101906103c7565b506103ee9291506103f2565b5090565b5b808211156103ee57600081556001016103f3565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042f57600080fd5b813567ffffffffffffffff8082111561044757600080fd5b818401915084601f83011261045b57600080fd5b81358181111561046d5761046d610407565b604051601f8201601f19908116603f0116810190838211818310171561049557610495610407565b816040528281528760208487010111156104ae57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156104f4576020818501810151868301820152016104d8565b81811115610506576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061052e60208301846104ce565b9392505050565b600181811c9082168061054957607f821691505b60208210810361056957634e487b7160e01b600052602260045260246000fd5b50919050565b60608152600061058260608301866104ce565b828103602084015261059481866104ce565b905082810360408401526105a881856104ce565b969550505050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a164736f6c634300080d000a4465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
