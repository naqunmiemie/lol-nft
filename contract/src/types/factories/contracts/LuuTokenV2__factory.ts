/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LuuTokenV2,
  LuuTokenV2Interface,
} from "../../contracts/LuuTokenV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "buyChampionNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLuuTokenByEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyLuuTokenByUsdt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "championAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "luckyDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawUsdt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051612c8761004c6000396000818161064b015281816106d5015281816108cd015281816109520152610a2f0152612c876000f3fe6080604052600436106101d85760003560e01c806370a0823111610102578063a0ef91df11610095578063c0d340a911610064578063c0d340a9146104d5578063cf9c2e41146104f6578063dd62ed3e1461050b578063f2fde38b1461055157600080fd5b8063a0ef91df1461046d578063a457c2d714610475578063a9059cbb14610495578063bcdb7b72146104b557600080fd5b80638da5cb5b116100d15780638da5cb5b146104095780638e15f4731461043b57806393bb0d881461045057806395d89b411461045857600080fd5b806370a0823114610394578063715018a6146103ca5780638129fc1c146103df5780638456cb59146103f457600080fd5b80633f4ba83a1161017a5780635c975abb116101495780635c975abb146103325780635cd8a76b1461034a5780635ec964531461035f5780636865b8e71461037f57600080fd5b80633f4ba83a146102d557806340c10f19146102ea5780634f1ef2861461030a57806352d1902d1461031d57600080fd5b806323b872dd116101b657806323b872dd14610257578063313ce567146102775780633659cfe61461029357806339509351146102b557600080fd5b806306fdde03146101dd578063095ea7b31461020857806318160ddd14610238575b600080fd5b3480156101e957600080fd5b506101f2610571565b6040516101ff91906127e1565b60405180910390f35b34801561021457600080fd5b50610228610223366004612829565b610603565b60405190151581526020016101ff565b34801561024457600080fd5b506035545b6040519081526020016101ff565b34801561026357600080fd5b50610228610272366004612855565b61061b565b34801561028357600080fd5b50604051601281526020016101ff565b34801561029f57600080fd5b506102b36102ae366004612896565b610641565b005b3480156102c157600080fd5b506102286102d0366004612829565b6107b8565b3480156102e157600080fd5b506102b36107f7565b3480156102f657600080fd5b506102b3610305366004612829565b61085b565b6102b36103183660046128fa565b6108c3565b34801561032957600080fd5b50610249610a22565b34801561033e57600080fd5b5060655460ff16610228565b34801561035657600080fd5b506102b3610ae7565b34801561036b57600080fd5b506102b361037a3660046129a2565b610b7e565b34801561038b57600080fd5b506102b3610db8565b3480156103a057600080fd5b506102496103af366004612896565b6001600160a01b031660009081526033602052604090205490565b3480156103d657600080fd5b506102b3610f18565b3480156103eb57600080fd5b506102b3610f7c565b34801561040057600080fd5b506102b3611081565b34801561041557600080fd5b506097546001600160a01b03165b6040516001600160a01b0390911681526020016101ff565b34801561044757600080fd5b506102496110e3565b6102b3611169565b34801561046457600080fd5b506101f2611288565b6102b3611297565b34801561048157600080fd5b50610228610490366004612829565b61131d565b3480156104a157600080fd5b506102286104b0366004612829565b6113d2565b3480156104c157600080fd5b506102b36104d03660046129a2565b6113e0565b3480156104e157600080fd5b5061012e54610423906001600160a01b031681565b34801561050257600080fd5b506102b3611505565b34801561051757600080fd5b506102496105263660046129bb565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561055d57600080fd5b506102b361056c366004612896565b6117d8565b606060368054610580906129f4565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac906129f4565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b5050505050905090565b6000336106118185856118b7565b5060019392505050565b6000336106298582856119db565b610634858585611a6d565b60019150505b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661072e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146107995760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016106ca565b604080516000808252602082019092526107b591839190611c6a565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061061190829086906107f2908790612a44565b6118b7565b6097546001600160a01b031633146108515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b610859611e0f565b565b6097546001600160a01b031633146108b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b6108bf8282611eab565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109505760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016106ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109ab7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610a165760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016106ca565b6108bf82826001611c6a565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ac25760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106ca565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60026000610af482611f8a565b90508015610b0c576000805461ff0019166101001790555b61012e80546001600160a01b03191673a98208a975808fd6aa1585179a0861d357f1914217905580156108bf576000805461ff001916905560405160ff831681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60655460ff1615610bc45760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ca565b61012e546040516331a9108f60e11b8152600481018390526001600160a01b03909116906000908290636352211e90602401602060405180830381865afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c379190612a5c565b9050610cac81836001600160a01b031663cb15c135866040518263ffffffff1660e01b8152600401610c6b91815260200190565b602060405180830381865afa158015610c88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190612a79565b610cf85760405162461bcd60e51b815260206004820152600e60248201527f7472616e73666572206572726f7200000000000000000000000000000000000060448201526064016106ca565b6040516323b872dd60e01b81526001600160a01b038281166004830152336024830152604482018590528316906323b872dd90606401600060405180830381600087803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b50505050816001600160a01b031663499e12ea6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d9b57600080fd5b505af1158015610daf573d6000803e3d6000fd5b50505050505050565b6097546001600160a01b03163314610e125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b6040516370a0823160e01b815230600482015273d9ba894e0097f8cc2bbc9d24d308b98e36dc6d0290819063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e919190612a79565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190612a92565b6097546001600160a01b03163314610f725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b61085960006120a5565b6000610f886001611f8a565b90508015610fa0576000805461ff0019166101001790555b610ffa6040518060400160405280600881526020017f4c7575546f6b656e000000000000000000000000000000000000000000000000815250604051806040016040528060038152602001624c544b60e81b8152506120f7565b61100261216c565b61100a6121df565b611012612252565b61012d80546001600160a01b031916738a753747a1fa494ec906ce90e9f37563a8af630e17905580156107b5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6097546001600160a01b031633146110db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b6108596122bd565b60008061012d60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e9190612ace565b509195945050505050565b60655460ff16156111af5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ca565b655af3107a40003410156112055760405162461bcd60e51b815260206004820181905260248201527f596f75206d75737420706179206174206c6561737420302e303030312065746860448201526064016106ca565b600061120f6110e3565b9050600081136112615760405162461bcd60e51b815260206004820152600f60248201527f457468207072696365206572726f72000000000000000000000000000000000060448201526064016106ca565b60006305f5e1006112728334612b1e565b61127c9190612b53565b90506108bf3382611eab565b606060378054610580906129f4565b6097546001600160a01b031633146112f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b60405133904780156108fc02916000818181858888f193505050501580156107b5573d6000803e3d6000fd5b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156113ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106ca565b6113c782868684036118b7565b506001949350505050565b600033610611818585611a6d565b60655460ff16156114265760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ca565b600181116114765760405162461bcd60e51b815260206004820152601c60248201527f596f75206d75737420706179206174206c65617374203120557364740000000060448201526064016106ca565b6040516323b872dd60e01b81523360048201523060248201526044810182905273d9ba894e0097f8cc2bbc9d24d308b98e36dc6d029081906323b872dd906064016020604051808303816000875af11580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa9190612a92565b506108bf3383611eab565b60655460ff161561154b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ca565b61012e546040516207335b60ed1b81523060048201526000916001600160a01b03169063e66b600090602401600060405180830381865afa158015611594573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115bc9190810190612b67565b9050600081511161160f5760405162461bcd60e51b815260206004820152601360248201527f5072697a6520706f6f6c20697320656d7074790000000000000000000000000060448201526064016106ca565b61162130670de0b6b3a76400006113d2565b61166d5760405162461bcd60e51b815260206004820152601360248201527f5472616e736665722066726f6d206572726f720000000000000000000000000060448201526064016106ca565b6040516bffffffffffffffffffffffff193360601b166020820152600090439042906034016040516020818303038152906040528051906020012060001c6116b59190612b53565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c6116fa9190612b53565b6117044442612a44565b61170e9190612a44565b6117189190612a44565b6117229190612a44565b61172c9190612a44565b60405160200161173e91815260200190565b6040516020818303038152906040528051906020012060001c90506000828351836117699190612c0d565b8151811061177957611779612c21565b602090810291909101015161012e546040516323b872dd60e01b8152306004820152336024820152604481018390529192506001600160a01b0316906323b872dd90606401600060405180830381600087803b158015610d9b57600080fd5b6097546001600160a01b031633146118325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ca565b6001600160a01b0381166118ae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ca565b6107b5816120a5565b6001600160a01b0383166119195760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106ca565b6001600160a01b03821661197a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106ca565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611a675781811015611a5a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106ca565b611a6784848484036118b7565b50505050565b6001600160a01b038316611ae95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106ca565b6001600160a01b038216611b4b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106ca565b6001600160a01b03831660009081526033602052604090205481811015611bda5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106ca565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611c11908490612a44565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c5d91815260200190565b60405180910390a3611a67565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611ca257611c9d83612338565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611cfc575060408051601f3d908101601f19168201909252611cf991810190612a79565b60015b611d6e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016106ca565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611e035760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016106ca565b50611c9d8383836123f6565b60655460ff16611e615760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016106ca565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216611f015760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ca565b8060356000828254611f139190612a44565b90915550506001600160a01b03821660009081526033602052604081208054839290611f40908490612a44565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008054610100900460ff1615612018578160ff166001148015611fad5750303b155b6120105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ca565b506000919050565b60005460ff8084169116106120865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ca565b506000805460ff191660ff92909216919091179055600190565b919050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166121625760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b6108bf828261241b565b600054610100900460ff166121d75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b6108596124ad565b600054610100900460ff1661224a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b610859612524565b600054610100900460ff166108595760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b60655460ff16156123035760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ca565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e8e3390565b6001600160a01b0381163b6123b55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016106ca565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6123ff83612598565b60008251118061240c5750805b15611c9d57611a6783836125d8565b600054610100900460ff166124865760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b815161249990603690602085019061271c565b508051611c9d90603790602084019061271c565b600054610100900460ff166125185760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b6065805460ff19169055565b600054610100900460ff1661258f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106ca565b610859336120a5565b6125a181612338565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6126575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016106ca565b600080846001600160a01b0316846040516126729190612c37565b600060405180830381855af49150503d80600081146126ad576040519150601f19603f3d011682016040523d82523d6000602084013e6126b2565b606091505b50915091506126da8282604051806060016040528060278152602001612c54602791396126e3565b95945050505050565b606083156126f257508161063a565b8251156127025782518084602001fd5b8160405162461bcd60e51b81526004016106ca91906127e1565b828054612728906129f4565b90600052602060002090601f01602090048101928261274a5760008555612790565b82601f1061276357805160ff1916838001178555612790565b82800160010185558215612790579182015b82811115612790578251825591602001919060010190612775565b5061279c9291506127a0565b5090565b5b8082111561279c57600081556001016127a1565b60005b838110156127d05781810151838201526020016127b8565b83811115611a675750506000910152565b60208152600082518060208401526128008160408501602087016127b5565b601f01601f19169190910160400192915050565b6001600160a01b03811681146107b557600080fd5b6000806040838503121561283c57600080fd5b823561284781612814565b946020939093013593505050565b60008060006060848603121561286a57600080fd5b833561287581612814565b9250602084013561288581612814565b929592945050506040919091013590565b6000602082840312156128a857600080fd5b813561063a81612814565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128f2576128f26128b3565b604052919050565b6000806040838503121561290d57600080fd5b823561291881612814565b915060208381013567ffffffffffffffff8082111561293657600080fd5b818601915086601f83011261294a57600080fd5b81358181111561295c5761295c6128b3565b61296e601f8201601f191685016128c9565b9150808252878482850101111561298457600080fd5b80848401858401376000848284010152508093505050509250929050565b6000602082840312156129b457600080fd5b5035919050565b600080604083850312156129ce57600080fd5b82356129d981612814565b915060208301356129e981612814565b809150509250929050565b600181811c90821680612a0857607f821691505b602082108103612a2857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a5757612a57612a2e565b500190565b600060208284031215612a6e57600080fd5b815161063a81612814565b600060208284031215612a8b57600080fd5b5051919050565b600060208284031215612aa457600080fd5b8151801515811461063a57600080fd5b805169ffffffffffffffffffff811681146120a057600080fd5b600080600080600060a08688031215612ae657600080fd5b612aef86612ab4565b9450602086015193506040860151925060608601519150612b1260808701612ab4565b90509295509295909350565b6000816000190483118215151615612b3857612b38612a2e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612b6257612b62612b3d565b500490565b60006020808385031215612b7a57600080fd5b825167ffffffffffffffff80821115612b9257600080fd5b818501915085601f830112612ba657600080fd5b815181811115612bb857612bb86128b3565b8060051b9150612bc98483016128c9565b8181529183018401918481019088841115612be357600080fd5b938501935b83851015612c0157845182529385019390850190612be8565b98975050505050505050565b600082612c1c57612c1c612b3d565b500690565b634e487b7160e01b600052603260045260246000fd5b60008251612c498184602087016127b5565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080d000a";

type LuuTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LuuTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LuuTokenV2__factory extends ContractFactory {
  constructor(...args: LuuTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LuuTokenV2> {
    return super.deploy(overrides || {}) as Promise<LuuTokenV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LuuTokenV2 {
    return super.attach(address) as LuuTokenV2;
  }
  override connect(signer: Signer): LuuTokenV2__factory {
    return super.connect(signer) as LuuTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LuuTokenV2Interface {
    return new utils.Interface(_abi) as LuuTokenV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LuuTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as LuuTokenV2;
  }
}
